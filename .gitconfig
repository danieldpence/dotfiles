[color]
  ui = auto
[user]
  name = <First Name> <Last Name>
  email = <Email Address>
[branch]
    autosetuprebase = always # Configures all tracking branches to use rebase
[core]
    autocrlf = input # Normalize line endings when committing. Note: If you are on a PC, this should be set to `true` instead of `input`
    excludesfile = ~/.gitignore
[merge]
    ff = only # Only allow fast-forward merges
[pull]
    rebase = true # Rebase branches on top of the fetched branch
[alias]
    aliases = config --get-regexp alias # List all of your aliases
    co = checkout # Saves a few characters on one of the most-used commands
    last = log -1 HEAD # Shows the last commit
    lg1 = log --graph --all --format=format:'%C(bold blue)%h%C(reset) -%C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)—%an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
    lg2 = log --graph --all --format=format:'%C(bold blue)%h%C(reset) -%C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(boldyellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(bold white)—%an%C(reset)' --abbrev-commit
    lg = !"git lg1"
    lol = log --graph --decorate --pretty=oneline --abbrev-commit --all # A more concise log output
    st = status # Saves a few characters on one of the most-used commands
    unstage = reset HEAD -- # Might be easier to remember
    up = !git fetch origin && git rebase origin/master # Catches your branch up with origin master
[diff]
    renames = true         # Enable detection of renamed files when diffing
[fetch]
	prune = true
[interactive]
    singlekey = true       # Saves you from having to hit enter when using an interactive command
[push]
    default = current      # Assumes the current branch when pushing, creating that branch on origin if it doesn't exist
[credential]
    helper = osxkeychain   # Have OSX manage your passwords for HTTPS pull/push
